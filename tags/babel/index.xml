<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="http://shu000.github.io/xml/base.min.xml" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>babel on miyagon&#39;s blog</title>
    <link>http://shu000.github.io/tags/babel/</link>
    <description>Recent content in babel on miyagon&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 16 May 2020 12:01:48 +0900</lastBuildDate>
    <atom:link href="http://shu000.github.io/tags/babel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React &#43; babel &#43; webpack</title>
      <link>http://shu000.github.io/post/20200516/</link>
      <pubDate>Sat, 16 May 2020 12:01:48 +0900</pubDate>
      <guid>http://shu000.github.io/post/20200516/</guid>
      <description>&lt;p&gt;2019年8月頃のメモを掘り出したので転記。&lt;/p&gt;
&lt;h1 id=&#34;init&#34;&gt;init&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git init
npm init -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;npm-install&#34;&gt;npm install&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;npm install --save react react-dom
npm install --save-dev webpack webpack-cli
npm instlal --save-dev @babel/cli @babel/core @babel/preset-env @babel/preset-react babel-loader

&lt;span style=&#34;color:#75715e&#34;&gt;# HMRしてくれるやつ&lt;/span&gt;
npm install --save-dev webpack-dev-server
&lt;span style=&#34;color:#75715e&#34;&gt;# htmlにbundle.jsを埋め込んでくれるやつ&lt;/span&gt;
npm install --save-dev html-webpack-plugin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;webpackconfigjs&#34;&gt;webpack.config.js&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js:webpack.config.js&#34; data-lang=&#34;js:webpack.config.js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HtmlWebPackPlugin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;html-webpack-plugin&amp;#34;&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;// ./src/index.html に ./dist/bundle.js を埋め込んで ./dist/index.html に吐き出す子
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;htmlWebpackPlugin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HtmlWebPackPlugin&lt;/span&gt;({
  &lt;span style=&#34;color:#a6e22e&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./src/index.html&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./index.html&amp;#34;&lt;/span&gt;
});

&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;entry&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/src/index.js&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#a6e22e&#34;&gt;output&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/dist&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bundle.js&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;rules&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
      {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/\.js$/&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
          {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;loader&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;babel-loader&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
              &lt;span style=&#34;color:#a6e22e&#34;&gt;presets&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@babel/preset-env&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@babel/react&amp;#34;&lt;/span&gt;
              ]
            }
          }
        ]
      }
    ]
  },
  &lt;span style=&#34;color:#a6e22e&#34;&gt;plugins&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;htmlWebpackPlugin&lt;/span&gt;],
  &lt;span style=&#34;color:#75715e&#34;&gt;// webpack-dev-server の設定
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;devServer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;inline&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,   &lt;span style=&#34;color:#75715e&#34;&gt;// localhost:3000/webpack-dev-server/ではなくlocalhost:3000/でアクセスできるようになる。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3000&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// ※ dockerのコンテナで立てたサーバが他のホストからアクセスできるように全てのネットワークインターフェースに接続
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  }
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>git log の分析考える</title>
      <link>http://shu000.github.io/post/20200421/</link>
      <pubDate>Tue, 21 Apr 2020 00:50:55 +0900</pubDate>
      <guid>http://shu000.github.io/post/20200421/</guid>
      <description>&lt;p&gt;（追記予定）&lt;/p&gt;
&lt;h1 id=&#34;よく更新されるファイルを探したい&#34;&gt;よく更新されるファイルを探したい&lt;/h1&gt;
&lt;p&gt;ブランチ&lt;code&gt;v1&lt;/code&gt;〜&lt;code&gt;v2&lt;/code&gt;間の各ファイルの追加・削除行数の合計を表示し、追加行数降順に並べる&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git log --numstat --no-merges --pretty&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; v1 v2 | grep -v &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dist/&amp;#34;&lt;/span&gt; | grep -E &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.+\.(ts|tsx)&amp;#34;&lt;/span&gt; | sort -nr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://maku77.github.io/git/stats/count-changes.html&#34;&gt;https://maku77.github.io/git/stats/count-changes.html&lt;/a&gt;
&lt;a href=&#34;https://qiita.com/richmikan@github/items/cc4494359b1ac2f72311&#34;&gt;https://qiita.com/richmikan@github/items/cc4494359b1ac2f72311&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Next.js &#43; React &#43; TypeScirpt に Jest 導入したメモ</title>
      <link>http://shu000.github.io/post/20200420/</link>
      <pubDate>Mon, 20 Apr 2020 19:52:53 +0900</pubDate>
      <guid>http://shu000.github.io/post/20200420/</guid>
      <description>&lt;h1 id=&#34;入れたものリスト&#34;&gt;入れたものリスト&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Jest&lt;/li&gt;
&lt;li&gt;react-testing-library&lt;/li&gt;
&lt;li&gt;jest-dom&lt;/li&gt;
&lt;li&gt;react-test-renderer&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;jest&#34;&gt;Jest&lt;/h1&gt;
&lt;p&gt;インストール&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yarn add -D jest @types/jest babel-jest identity-obj-proxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;jest.config.js&lt;/code&gt;を書く&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jest.config.js&#34; data-lang=&#34;jest.config.js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;roots&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;rootDir&amp;gt;/src&amp;#34;&lt;/span&gt;],
  &lt;span style=&#34;color:#a6e22e&#34;&gt;moduleNameMapper&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#75715e&#34;&gt;// import &amp;#39;*.css&amp;#39; を無視する
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\.(css|scss)$&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;identity-obj-proxy&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#a6e22e&#34;&gt;transform&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#75715e&#34;&gt;// jest実行時にtsとjsxをバベる
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^.+\\.(js|jsx|ts|tsx)$&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;babel-jest&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#a6e22e&#34;&gt;transformIgnorePatterns&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
    &lt;span style=&#34;color:#75715e&#34;&gt;// node_modules/ 以下はバベらない
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)&amp;#34;&lt;/span&gt;,
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;babel.config.js&lt;/code&gt;がない場合は書く&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zeit/next.js/issues/8663&#34;&gt;参考&lt;/a&gt; &lt;a href=&#34;https://github.com/zeit/next.js/tree/canary/examples/with-jest&#34;&gt;公式サンプル&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-babel.config.js&#34; data-lang=&#34;babel.config.js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;presets&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;next/babel&amp;#34;&lt;/span&gt;]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;react-testing-library&#34;&gt;react-testing-library&lt;/h1&gt;
&lt;p&gt;基本的にはインストールするだけ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yarn add -D @testing-library/react
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;container-componentをレンダリングしたい場合&#34;&gt;Container Componentをレンダリングしたい場合&lt;/h3&gt;
&lt;p&gt;react-testing-libraryにはshallowレンダリング機能がないため、子や孫にContainer Componentが含まれていたら詰む。&lt;/p&gt;
&lt;p&gt;対策として、コンポーネントを&lt;code&gt;&amp;lt;Provider&amp;gt;&lt;/code&gt;でラップしてからレンダリングするラッパーレンダラーを用意し、がっつりレンダリングしてしまう。&lt;/p&gt;
&lt;p&gt;ラッパーレンダラー&lt;code&gt;testUtils.js&lt;/code&gt;をプロジェクトのルートとかに書く。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-testUtils.js&#34; data-lang=&#34;testUtils.js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;createStore&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redux&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;Provider&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react-redux&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rtlRender&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@testing-library/react&amp;#39;&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;initialState&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;reducer&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./reducer&amp;#39;&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;wrappedRender&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ui&lt;/span&gt;,
  {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;initialState&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;store&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createStore&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;reducer&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;initialState&lt;/span&gt;),
    ...&lt;span style=&#34;color:#a6e22e&#34;&gt;renderOptions&lt;/span&gt;
  } &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Wrapper&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;children&lt;/span&gt; }) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Provider&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;store&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;store&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;children&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/Provider&amp;gt;&lt;/span&gt;
  }
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rtlRender&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ui&lt;/span&gt;, { &lt;span style=&#34;color:#a6e22e&#34;&gt;wrapper&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Wrapper&lt;/span&gt;, ...&lt;span style=&#34;color:#a6e22e&#34;&gt;renderOptions&lt;/span&gt; })
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@testing-library/react&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;wrappedRender&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;各テストで必要な際、&lt;code&gt;import { render } from &#39;@testing-library/react&#39;&lt;/code&gt;の代わりに&lt;code&gt;import { render } from &#39;./testUtils&#39;&lt;/code&gt;してあげる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://testing-library.com/docs/example-react-redux&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;jest-dom&#34;&gt;jest-dom&lt;/h1&gt;
&lt;p&gt;インストール&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yarn add -D @testing-library/jest-dom 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;setupTests.js&lt;/code&gt;を書く&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-setupTests.js&#34; data-lang=&#34;setupTests.js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@testing-library/jest-dom/extend-expect&amp;#34;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;jest.config.js&lt;/code&gt;に&lt;code&gt;setupTests.js&lt;/code&gt;を読み込む設定を追記&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jest.config.js&#34; data-lang=&#34;jest.config.js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {

  &lt;span style=&#34;color:#a6e22e&#34;&gt;setupFilesAfterEnv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;rootDir&amp;gt;/setupTests.js&amp;#34;&lt;/span&gt;]

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（※面倒でないなら各テストで&lt;code&gt;import &amp;quot;@testing-library/jest-dom/extend-expect&amp;quot;&lt;/code&gt;すればよい）&lt;/p&gt;
&lt;h3 id=&#34;waitfor使えない問題&#34;&gt;waitFor()使えない問題&lt;/h3&gt;
&lt;p&gt;react-testing-libraryとjest-domを同時に利用するときの、&lt;a href=&#34;https://github.com/testing-library/dom-testing-library/issues/477&#34;&gt;waitFor()使えない問題&lt;/a&gt;を解消する&lt;/p&gt;
&lt;p&gt;パッケージインストール&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yarn add -D jest-environment-jsdom-sixteen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;jest呼び出し時のコマンドライン引数を追加する必要があるため、&lt;code&gt;package.json&lt;/code&gt;のスクリプトを変更&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-package.json&#34; data-lang=&#34;package.json&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jest --env=jest-environment-jsdom-sixteen&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;react-test-renderer&#34;&gt;react-test-renderer&lt;/h1&gt;
&lt;p&gt;これは本当インストールするだけ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yarn add -D react-test-renderer @types/react-test-renderer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Docker＋Node.js＋VSCode環境をWindowsで構築する</title>
      <link>http://shu000.github.io/post/20191110/</link>
      <pubDate>Thu, 07 Nov 2019 13:38:57 +0900</pubDate>
      <guid>http://shu000.github.io/post/20191110/</guid>
      <description>&lt;p&gt;手順メモ。&lt;/p&gt;
&lt;h1 id=&#34;versions&#34;&gt;Versions&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Docker Desktop：2.1.0.4&lt;/li&gt;
&lt;li&gt;VSCode：1.29.2&lt;/li&gt;
&lt;li&gt;Node.js：10.17.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;docker-desktop-for-windows-をインストール&#34;&gt;Docker Desktop for Windows をインストール&lt;/h1&gt;
&lt;p&gt;今回はNode.jsをDockerコンテナ上で利用することとします。
Node.jsをインストールする他の方法として&lt;a href=&#34;https://github.com/coreybutler/nvm-windows&#34;&gt;nvm-windows&lt;/a&gt;という選択肢もありますが、本記事では割愛します。
なお、ローカルへのNode.js直接インストールは、バージョン変更が面倒になるのでおすすめしません。&lt;/p&gt;
&lt;h2 id=&#34;前準備hyper-vの有効化&#34;&gt;前準備（Hyper-Vの有効化）&lt;/h2&gt;
&lt;p&gt;DockerはLinuxのファイルシステムを利用した仮想化システムです。WindowsではHyper-Vを利用して仮想化を実現しています。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;コントロールパネル &amp;gt; プログラムと機能 &amp;gt; Windows機能の有効化または無効化　を開く&lt;/li&gt;
&lt;li&gt;Hyper-Vにチェックを入れる&lt;/li&gt;
&lt;li&gt;ねんのためWindowsを再起動する&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_HyperV.png&#34; alt=&#34;Hyper-V設定画面&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;dockerインストール手順&#34;&gt;Dockerインストール手順&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/docker-for-windows/install/&#34;&gt;このページ&lt;/a&gt;から、インストーラをダウンロードする&lt;/li&gt;
&lt;li&gt;その際、DockerHubへのサインインを求められるのでアカウントを作成しておく&lt;/li&gt;
&lt;li&gt;インストーラを起動して、何回かYesをクリックしたら完了&lt;/li&gt;
&lt;li&gt;スタートメニューからDocker Desktopを起動&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_Bar.png&#34; alt=&#34;ツールバーにクジラ表示&#34;&gt;&lt;/p&gt;
&lt;p&gt;ここにクジラが表示されたら起動完了です。&lt;/p&gt;
&lt;h2 id=&#34;ドライブ共有設定&#34;&gt;ドライブ共有設定&lt;/h2&gt;
&lt;p&gt;WindowsのドライブをDockerコンテナと共有できるようにしておきます。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;クジラを右クリックしてSettingsを選択&lt;/li&gt;
&lt;li&gt;Shared Drives から共有したいドライブをチェックしてApplyする&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_SharedDrives.png&#34; alt=&#34;ドライブ共有設定画面&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;vscode-をインストール&#34;&gt;VSCode をインストール&lt;/h1&gt;
&lt;p&gt;入力補完やESLint自動適用などのプラグインが便利なエディタです。&lt;/p&gt;
&lt;h2 id=&#34;vscodeインストール手順&#34;&gt;VSCodeインストール手順&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;このページ&lt;/a&gt;からインストーラをダウンロードする&lt;/li&gt;
&lt;li&gt;インストーラを実行する&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;vscode日本語化手順&#34;&gt;VSCode日本語化手順&lt;/h2&gt;
&lt;p&gt;日本語化もしておくと見やすいです。Extensionsを開いて「japanese」などで検索すると日本語拡張が見つかります。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_VSCodeJapan.png&#34; alt=&#34;VSCode日本語拡張&#34;&gt;&lt;/p&gt;
&lt;p&gt;私の場合「使用法」欄のconfig設定はしなくても日本語化されました。&lt;/p&gt;
&lt;p&gt;日本語表示はこんな感じ。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_VSCodeJapanesed.png&#34; alt=&#34;日本語化後の画面&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;vscodeでdocker上のnodejsプロジェクトを開く&#34;&gt;VSCodeでDocker上のNode.jsプロジェクトを開く&lt;/h1&gt;
&lt;h2 id=&#34;dockerでnodejsコンテナを起動する&#34;&gt;DockerでNode.jsコンテナを起動する&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;コマンドプロンプトかPowerShellで起動コマンドを叩く&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;docker container run -it -d --name sample -p 3000:3000 -v C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\u&lt;/span&gt;sername&lt;span style=&#34;color:#ae81ff&#34;&gt;\D&lt;/span&gt;evelopment&lt;span style=&#34;color:#ae81ff&#34;&gt;\m&lt;/span&gt;yproj:/root/myproj -w /root/myproj node:10.17.0 /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;各コマンド・オプションの意味は以下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker container run&lt;/code&gt;：コンテナ起動コマンド&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-it&lt;/code&gt;：ホスト（Windows）のターミナル操作をコンテナの標準入出力に紐づける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;：デタッチモードで起動する（バックグラウンドで起動する）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--name myproj&lt;/code&gt;：myprojという名前を付ける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p 8000:8000&lt;/code&gt;：ホスト3000ポートをコンテナ3000ポートに紐づける&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v C:\...\myproj:/root/myproj&lt;/code&gt;：ホストの「C:...\myproj」を、コンテナの「/root/myproj」で参照可能にする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w /root/myproj&lt;/code&gt;：作業ディレクトリ（コンテナ起動時の）を「/root/myproj」にする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;node:10.17.0&lt;/code&gt;：起動するイメージを「node:10.17.0」に指定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;起動中コンテナの確認コマンドは以下です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;docker container ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_Docker.png&#34; alt=&#34;Dockerコンテナ起動確認&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;vscodeで起動したコンテナを開く&#34;&gt;VSCodeで起動したコンテナを開く&lt;/h2&gt;
&lt;p&gt;まず日本語拡張と同様の手順で「Remote Development」拡張をインストールします。リモートエクスプローラーペインが追加され、さっき起動したmyprojコンテナが見えるようになります。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_VSCodeContainer.png&#34; alt=&#34;コンテナ一覧&#34;&gt;&lt;/p&gt;
&lt;p&gt;次にコンテナにアタッチします。Connect to Container ボタンをクリックするとアタッチできます。
アタッチ直後にはVSCodeの設定ファイルが開かれれると思います。保存しておけばよいです。
ただ同一イメージからコンテナを立ち上げると設定が引き継がれるので注意してください。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_VSCodeConnect.png&#34; alt=&#34;コンテナアタッチ操作&#34;&gt;&lt;/p&gt;
&lt;p&gt;アタッチ完了したらエクスプローラーでコンテナ上のディレクトリが見れるようになります。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_VSCodeOpened.png&#34; alt=&#34;コンテナアタッチ完了&#34;&gt;&lt;/p&gt;
&lt;p&gt;ディレクトリが開いていなかったら「フォルダーを開く」から開けます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_VSCodeOpening.png&#34; alt=&#34;コンテナ内のディレクトリを開く操作&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;nodejs-動作確認&#34;&gt;Node.js 動作確認&lt;/h2&gt;
&lt;p&gt;動作確認のため、HelloWorldしてみます。hello.jsを作成します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_VSCodeHello.png&#34; alt=&#34;hello.js&#34;&gt;&lt;/p&gt;
&lt;p&gt;次に「ターミナル &amp;gt; 新しいターミナル」からターミナルを開きましょう。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_VSCodeTerminal.png&#34; alt=&#34;ターミナルを開く&#34;&gt;&lt;/p&gt;
&lt;p&gt;ちゃんとコンテナのターミナルを開いてくれます！VSCodeべんり！
&lt;code&gt;node hello.js&lt;/code&gt;でメッセージが表示されました！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://shu000.github.io/images/20191107_VSCodeTest.png&#34; alt=&#34;動作確認&#34;&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>EC2にdocker-composeインストール</title>
      <link>http://shu000.github.io/post/20191029/</link>
      <pubDate>Tue, 29 Oct 2019 15:57:47 +0900</pubDate>
      <guid>http://shu000.github.io/post/20191029/</guid>
      <description>&lt;h1 id=&#34;コマンドインストール&#34;&gt;コマンドインストール&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum update -y
sudo yum install vim git -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;ユーザを追加&#34;&gt;ユーザを追加&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo useradd miyagon
sudo passwd miyagon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;新規ユーザでsshできるようにする&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo cp -arp /home/ec2-user/.ssh /home/miyagon/
sudo chown -R miyagon /home/miyagon/.ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;新規ユーザにsudo権限を与える&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/sudoers&lt;/code&gt;で wheel グループに権限あればこっち&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo usermod -aG wheel miyagon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/sudoers.d/clout-init&lt;/code&gt;で個別付与ならこっち&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo visudo -f /etc/sudoers.d/cloud-init
  +miyagon ALL &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ALL&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ALL
  -ec2-user ALL &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NOPASSWD: ALL
  -ec2-user ALL&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;ALL&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; NOPASSWD:ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;ec2-usrを削除&#34;&gt;ec2-usrを削除&lt;/h1&gt;
&lt;p&gt;新規ユーザでssh可能なことを確認&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh -i IDENTITY_FILE miyagon@IP_ADDRESS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ログイン成功したらec2-userはいらない&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo userdel -r ec2-user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;docker-インストール&#34;&gt;Docker インストール&lt;/h1&gt;
&lt;p&gt;インストールして起動&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum install docker
sudo systemctl start docker
sudo systemctl enable docker
sudo docker --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ユーザをdockerグループに追加
（sudoなしでdockerコマンド叩けるようにする）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo usermod -aG docker miyagon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;docker-compose-インストール&#34;&gt;docker-compose インストール&lt;/h1&gt;
&lt;p&gt;バージョン番号は最新リリースをここで確認する
&lt;a href=&#34;https://github.com/docker/compose/releases&#34;&gt;Releases - docker/compose&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo curl -L https://github.com/docker/compose/releases/download/1.25.0-rc4/docker-compose-&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;uname -s&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;-&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;uname -m&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
docker-compose --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>mongoDB@4.0.12でバックアップとリストア</title>
      <link>http://shu000.github.io/post/20191028/</link>
      <pubDate>Mon, 28 Oct 2019 16:01:41 +0900</pubDate>
      <guid>http://shu000.github.io/post/20191028/</guid>
      <description>&lt;h1 id=&#34;バックアップ&#34;&gt;バックアップ&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mongodump --host hostname --port &lt;span style=&#34;color:#ae81ff&#34;&gt;27017&lt;/span&gt; --username user --password pass -o /dump
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;リストア&#34;&gt;リストア&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mongorestore --host hostname --port &lt;span style=&#34;color:#ae81ff&#34;&gt;27017&lt;/span&gt; --username user --password pass /dump
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>zshにPreztoでプロンプトテーマ設定した話</title>
      <link>http://shu000.github.io/post/20191022/</link>
      <pubDate>Tue, 22 Oct 2019 16:02:52 +0900</pubDate>
      <guid>http://shu000.github.io/post/20191022/</guid>
      <description>&lt;h1 id=&#34;zsh到来&#34;&gt;zsh到来&lt;/h1&gt;
&lt;p&gt;macOSをCatalinaにアップデートしたら
Terminalくんが「zshにしてよ！」と言ってきた&lt;/p&gt;
&lt;p&gt;zshにしてあげたら設定がデフォルトに戻ってしまった。&lt;/p&gt;
&lt;p&gt;すごください
&lt;img src=&#34;http://shu000.github.io/images/20191022_%E3%81%9F%E3%82%99%E3%81%95%E3%81%84.png&#34; alt=&#34;デフォルトのTerminal&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;preztoを入れた&#34;&gt;Preztoを入れた&lt;/h1&gt;
&lt;p&gt;zshでプロンプト設定をインポートしてくれるツール&lt;a href=&#34;https://github.com/sorin-ionescu/prezto&#34;&gt;Prezto&lt;/a&gt;を、今まで使ったことなかったので入れてみる&lt;/p&gt;
&lt;h2 id=&#34;失敗した&#34;&gt;失敗した&lt;/h2&gt;
&lt;p&gt;README.mdに従ってインストール&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone --recursive https://github.com/sorin-ionescu/prezto.git &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ZDOTDIR&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/.zprezto&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;怒られた&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xcrun: error: invalid active developer path &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;/Library/Developer/CommandLineTools&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;XCodeをインストールしないといかんらしい&lt;/p&gt;
&lt;p&gt;参考：https://qiita.com/takahashi_kazuki/items/1d85fd4f6df86092d5bc&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでおk&lt;/p&gt;
&lt;h2 id=&#34;成功した&#34;&gt;成功した&lt;/h2&gt;
&lt;p&gt;XCodeインストール後に叩き直したらうまくいった&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone --recursive https://github.com/sorin-ionescu/prezto.git &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ZDOTDIR&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/.zprezto&amp;#34;&lt;/span&gt;
setopt EXTENDED_GLOB
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; rcfile in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ZDOTDIR&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;/.zprezto/runcoms/^README.md&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;.N&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
  ln -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rcfile&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ZDOTDIR&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;rcfile:t&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;preztoでテーマ決め&#34;&gt;Preztoでテーマ決め！&lt;/h1&gt;
&lt;p&gt;選べるテーマのプレビュー閲覧機能もある&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;prompt -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;pure というテーマを入れてみた&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;prompt -s pure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下のメッセージがでたので、指示通りコマンドを追記してあげる&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Set and save not yet implemented.  Please ensure your ~/.zshrc
contains something similar to the following:

  autoload -Uz promptinit
  promptinit
  prompt pure
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;かっこいい
&lt;img src=&#34;http://shu000.github.io/images/20191022_%E3%81%8B%E3%81%A3%E3%81%93%E3%81%84%E3%81%84.png&#34; alt=&#34;pureテーマを適用したTerminal&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/notakaos/items/89057f2119655ab9f920&#34;&gt;https://qiita.com/notakaos/items/89057f2119655ab9f920&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>mocha試してみたメモ</title>
      <link>http://shu000.github.io/post/20190715/</link>
      <pubDate>Mon, 15 Jul 2019 12:18:30 +0900</pubDate>
      <guid>http://shu000.github.io/post/20190715/</guid>
      <description>&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;p&gt;mocha と babel を入れるよ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mocha : 単体テストライブラリ&lt;/li&gt;
&lt;li&gt;babel-cli : jsトランスパイラのクライアント(babel-core が依存関係で付いてくるよ！)&lt;/li&gt;
&lt;li&gt;babel-preset-es2015 : ES2051 -&amp;gt; javascript プリセット&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;npm install --save-dev mocha
npm install --save-dev babel babel-preset-es2015
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mocha&#34;&gt;Mocha&lt;/h2&gt;
&lt;p&gt;テストを書いてみる&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;assert&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;assert&amp;#39;&lt;/span&gt;);

&lt;span style=&#34;color:#a6e22e&#34;&gt;describe&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Array&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;describe&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#indexOf()&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;it&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;should return -1 when the value is not present&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;assert&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;equal&lt;/span&gt;([&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;indexOf&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
    });
  });
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;テストを実行してみる&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$PATH:./node_modules/.bin
mocha ./test-sample.js


  Array
    &lt;span style=&#34;color:#75715e&#34;&gt;#indexOf()&lt;/span&gt;
      ✓ should &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; -1 when the value is not present


  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; passing &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;42ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;動いたぞ！&lt;/p&gt;
&lt;h2 id=&#34;mocha-with-babel&#34;&gt;Mocha with BABEL&lt;/h2&gt;
&lt;h3 id=&#34;exportimport-まわりがよくわかっていない&#34;&gt;export/import まわりがよくわかっていない&lt;/h3&gt;
&lt;p&gt;ES6で書くともう全然テストできない！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Words&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;constructor&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
  }

 &lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;occurence&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;found&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;findIndex&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;obj&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;obj&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;found&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;({
        &lt;span style=&#34;color:#a6e22e&#34;&gt;wordID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;occurence&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;occurence&lt;/span&gt;
      });
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;found&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;occurence&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;occurence&lt;/span&gt;;
    }
  }

 &lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;;
  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;assert&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;assert&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;../public/js/Words&amp;#34;&lt;/span&gt;);

&lt;span style=&#34;color:#a6e22e&#34;&gt;describe&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Words&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;describe&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#get()&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;it&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;should return [] when empty&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Words&lt;/span&gt;();
      &lt;span style=&#34;color:#a6e22e&#34;&gt;assert&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;deepStrictEqual&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(), []);
    });
  });

  &lt;span style=&#34;color:#a6e22e&#34;&gt;describe&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#append()&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;it&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;should append args when not exists same word&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Words&lt;/span&gt;();
      &lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;StarPlutinum&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;999&lt;/span&gt;);
      &lt;span style=&#34;color:#a6e22e&#34;&gt;assert&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;deepStrictEqual&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(), [{
        &lt;span style=&#34;color:#a6e22e&#34;&gt;wordID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;StarPlutinum&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;occurence&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;999&lt;/span&gt;
      }]);
    });

    &lt;span style=&#34;color:#a6e22e&#34;&gt;it&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;should add args.occurence to words.occurende when exists same word&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Words&lt;/span&gt;();
      &lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The World&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;);
      &lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The World&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;);
      &lt;span style=&#34;color:#a6e22e&#34;&gt;assert&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;deepStrictEqual&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(), [{
        &lt;span style=&#34;color:#a6e22e&#34;&gt;wordID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The World&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;occurence&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
      }]);
    });
  });

});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;テスト結果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mocha ./test/test-words.js ./Words.js:1

export default class Words &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
^^^^^^

SyntaxError: Unexpected token export

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;export を理解してくれない。。。&lt;/p&gt;
&lt;h3 id=&#34;なのでbabelでトランスパイルしよう&#34;&gt;なのでBABELでトランスパイルしよう！&lt;/h3&gt;
&lt;h4 id=&#34;babelrc書いておく&#34;&gt;babelrc書いておく&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-json:.babelrc&#34; data-lang=&#34;json:.babelrc&#34;&gt;{
  &amp;quot;presets&amp;quot;: [&amp;quot;es2015&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;babelを噛ませてからテストしてみるけどうまくいかないじゃん&#34;&gt;babelを噛ませてからテストしてみるけどうまくいかないじゃん！&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mocha --require babel-core/register ./test/test-words.js 


  Words
    &lt;span style=&#34;color:#75715e&#34;&gt;#get()&lt;/span&gt;
      1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; should &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; when empty
    &lt;span style=&#34;color:#75715e&#34;&gt;#append()&lt;/span&gt;
      2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; should append args when not exists same word
      3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; should add args.occurence to words.occurende when exists same word


  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; passing &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;52ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; failing

  1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Words
       &lt;span style=&#34;color:#75715e&#34;&gt;#get()&lt;/span&gt;
         should &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; when empty:
     TypeError: Words is not a constructor
      at Context.&amp;lt;anonymous&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;test/test-words.js:10:21&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

...


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Words is not a constructor&lt;/em&gt; だとぉ。。。？&lt;/p&gt;
&lt;h3 id=&#34;require-書き換えたらうまくいった&#34;&gt;require() 書き換えたらうまくいった&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;export default class Words&lt;/code&gt; を
&lt;code&gt;{ default: Words[Function()] }&lt;/code&gt; で認識してるっぽい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript:test-words.js&#34; data-lang=&#34;javascript:test-words.js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;assert&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;assert&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;../public/js/Words&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;deault&lt;/span&gt;;

...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mocha --require babel-core/register ./test/test-words.js 


  Words
    &lt;span style=&#34;color:#75715e&#34;&gt;#get()&lt;/span&gt;
      ✓ should &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; when empty
    &lt;span style=&#34;color:#75715e&#34;&gt;#append()&lt;/span&gt;
      ✓ should append args when not exists same word
      ✓ should add args.occurence to words.occurende when exists same word


  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; passing &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;37ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;やり方合ってんのかはわからんが動いた！
やった〜&lt;/p&gt;
&lt;p&gt;以上。&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mochajs/mocha/wiki/compilers-deprecation&#34;&gt;compilers deprecation | GitHub mochajs/mocha Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nodejs.org/api/assert.html#assert_assert_deepstrictequal_actual_expected_message&#34;&gt;Assert | Node.js v12.6.0 Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>
